<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RAEREAREQD//2Q==
</value>
  </data>
</root>