<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>